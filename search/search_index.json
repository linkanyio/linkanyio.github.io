{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"LINKANY About \u00b6 linkany built for using private wireguard network easily, zero trust arch and wireguard protocol support. when using linkany, you need't configure wireguard manually, everything is auto. linkany can may connect kinds of devices, like mac os\u3001linux\u3001freebsd\u3001mobile etc. Architecture \u00b6 Install \u00b6 Download the linkany package from Downloads , choose actual platform you need. Quick Start \u00b6 Install linkany, then run linkany command, it will register to linkany management service, then you can create a network yourself at web UI. After that, you need not configure wireguard manually, linkany will auto manage your wireguard network. all operations can be done on the web UI, you can visit http://linkany.io and logon to manage your linkany network. Create Group \u00b6 You can create a group on the web UI, a group is a wireguard network, you can add devices to the group, and all devices in the group can connect to each other. Share Group \u00b6 You can share the group to other users, they can join the group and connect to your devices. You can also share the group to a team, all members in the team can join the group and connect to your devices. Join Group \u00b6 When a group owner share the group to you, you can join the group by clicking the link in the email or web UI. After joining the group, you can connect to the devices in the group. Add Devices \u00b6 You can add devices to the group, the linkany node will receive Direct \u00b6 Node connect to rmmote using p2p, as all node compose mesh connect, when direct fails, node to node will change to 'relay' type auto. Relay service \u00b6 TURN \u00b6 TURN(Traversal Using Relays around NAT) is a protocol that allows clients to connect to each other when they are behind NATs (Network Address Translators) or firewalls. It is an extension of the STUN (Session Traversal Utilities for NAT) protocol, which is used to discover the public IP address and port of a client behind a NAT. TURN provides a way for clients to relay media traffic through a server when direct peer-to-peer communication is not possible due to NAT restrictions. TURN is a relay service, it is used when two nodes can not connect each other directly, like behind symmetric NAT. TURN is transfer protocol, transfered by udp or tcp, users can deploy self TURN service. DRP(KCP & QUIC) \u00b6 DRP(Data replication protocol) is used for data relay just when two nodes can not connect each other directly and also udp is forbidden. DRP is transfered by kcp or quic etc. users can deploy self DRP service. DNS \u00b6 Linkany provides a DNS service, you can use it to resolve domain names in your linkany network. You can also use your own DNS server if you prefer. You can set the DNS server in the web UI, and all devices in the group will use the DNS server you set. This is useful for resolving internal domain names in your linkany network. You can also use the DNS server to resolve external domain names, and all devices in the group will use the DNS server to resolve external domain names. This is useful for accessing external resources in your linkany network. You can also use the DNS server to resolve domain names in your linkany network, and all devices in the group will use the DNS server to resolve domain names in your linkany network. This is useful for accessing internal resources in your linkany network. License \u00b6 Linkany is licensed under the Apache License 2.0 . Contribute \u00b6 If you want to contribute to linkany, you can fork the repository and create a pull request. We welcome contributions from the community, and we will review your pull request as soon as possible. You can also report issues on the GitHub Issues . We will try to fix the issues as soon as possible, and we will also accept pull requests to fix the issues. You can also help us by translating the documentation to your language, or by improving the documentation. We welcome contributions to the documentation, and we will review your pull request as soon as possible.","title":"Home"},{"location":"#about","text":"linkany built for using private wireguard network easily, zero trust arch and wireguard protocol support. when using linkany, you need't configure wireguard manually, everything is auto. linkany can may connect kinds of devices, like mac os\u3001linux\u3001freebsd\u3001mobile etc.","title":"About"},{"location":"#architecture","text":"","title":"Architecture"},{"location":"#install","text":"Download the linkany package from Downloads , choose actual platform you need.","title":"Install"},{"location":"#quick-start","text":"Install linkany, then run linkany command, it will register to linkany management service, then you can create a network yourself at web UI. After that, you need not configure wireguard manually, linkany will auto manage your wireguard network. all operations can be done on the web UI, you can visit http://linkany.io and logon to manage your linkany network.","title":"Quick Start"},{"location":"#create-group","text":"You can create a group on the web UI, a group is a wireguard network, you can add devices to the group, and all devices in the group can connect to each other.","title":"Create Group"},{"location":"#share-group","text":"You can share the group to other users, they can join the group and connect to your devices. You can also share the group to a team, all members in the team can join the group and connect to your devices.","title":"Share Group"},{"location":"#join-group","text":"When a group owner share the group to you, you can join the group by clicking the link in the email or web UI. After joining the group, you can connect to the devices in the group.","title":"Join Group"},{"location":"#add-devices","text":"You can add devices to the group, the linkany node will receive","title":"Add Devices"},{"location":"#direct","text":"Node connect to rmmote using p2p, as all node compose mesh connect, when direct fails, node to node will change to 'relay' type auto.","title":"Direct"},{"location":"#relay-service","text":"","title":"Relay service"},{"location":"#turn","text":"TURN(Traversal Using Relays around NAT) is a protocol that allows clients to connect to each other when they are behind NATs (Network Address Translators) or firewalls. It is an extension of the STUN (Session Traversal Utilities for NAT) protocol, which is used to discover the public IP address and port of a client behind a NAT. TURN provides a way for clients to relay media traffic through a server when direct peer-to-peer communication is not possible due to NAT restrictions. TURN is a relay service, it is used when two nodes can not connect each other directly, like behind symmetric NAT. TURN is transfer protocol, transfered by udp or tcp, users can deploy self TURN service.","title":"TURN"},{"location":"#drpkcp-quic","text":"DRP(Data replication protocol) is used for data relay just when two nodes can not connect each other directly and also udp is forbidden. DRP is transfered by kcp or quic etc. users can deploy self DRP service.","title":"DRP(KCP &amp; QUIC)"},{"location":"#dns","text":"Linkany provides a DNS service, you can use it to resolve domain names in your linkany network. You can also use your own DNS server if you prefer. You can set the DNS server in the web UI, and all devices in the group will use the DNS server you set. This is useful for resolving internal domain names in your linkany network. You can also use the DNS server to resolve external domain names, and all devices in the group will use the DNS server to resolve external domain names. This is useful for accessing external resources in your linkany network. You can also use the DNS server to resolve domain names in your linkany network, and all devices in the group will use the DNS server to resolve domain names in your linkany network. This is useful for accessing internal resources in your linkany network.","title":"DNS"},{"location":"#license","text":"Linkany is licensed under the Apache License 2.0 .","title":"License"},{"location":"#contribute","text":"If you want to contribute to linkany, you can fork the repository and create a pull request. We welcome contributions from the community, and we will review your pull request as soon as possible. You can also report issues on the GitHub Issues . We will try to fix the issues as soon as possible, and we will also accept pull requests to fix the issues. You can also help us by translating the documentation to your language, or by improving the documentation. We welcome contributions to the documentation, and we will review your pull request as soon as possible.","title":"Contribute"},{"location":"guides/en/developer_guide/","text":"Cinder Theme Specimen Typography \u00b6 Typefaces \u00b6 Headers: Inter Body: Open Sans Code: Hack Body Copy \u00b6 You think water moves fast? You should see ice. It moves like it has a mind . Like it knows it killed the world once and got a taste for murder. After the avalanche, it took us a week to climb out . Now, I don't know exactly when we turned on each other, but I know that seven of us survived the slide... and only five made it out. Now we took an oath, that I'm breaking now. We said we'd say it was the snow that killed the other two, but it wasn't. Nature is lethal but it doesn't hold a candle to man. Like inline code? Here is a string for you 010101010 . Lead Body Copy \u00b6 Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus. Headings \u00b6 All HTML headings, <h1> through <h6> , are available. .h1 through .h6 classes are also available, for when you want to match the font styling of a heading but still want your text to be displayed inline. h1. Heading h2. Heading h3. Heading h4. Heading h5. Heading h6. Heading h1. Heading Secondary text h2. Heading Secondary text h3. Heading Secondary text h4. Heading Secondary text h5. Heading Secondary text h6. Heading Secondary text Blockquotes \u00b6 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Someone famous in Source Title Lists \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Horizontal Description Lists \u00b6 Something This is something SomethingElse This is something else Contextual Colors \u00b6 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Code \u00b6 Inline Code \u00b6 This is an example of inline code #import requests Preformatted Code Blocks with Syntax Highlighting def request(method, url, **kwargs): \"\"\"Constructs and sends a :class:`Request `. Usage:: >>> import requests >>> req = requests.request('GET', 'https://httpbin.org/get') \"\"\" # By using the 'with' statement we are sure the session is closed, thus we # avoid leaving sockets open which can trigger a ResourceWarning in some # cases, and look like a memory leak in others. with sessions.Session() as session: return session.request(method=method, url=url, **kwargs) def get(url, params=None, **kwargs): r\"\"\"Sends a GET request. :param url: URL for the new :class:`Request` object. :param params: (optional) Dictionary, list of tuples or bytes to send in the body of the :class:`Request`. :param \\*\\*kwargs: Optional arguments that ``request`` takes. :return: :class:`Response ` object :rtype: requests.Response \"\"\" kwargs.setdefault('allow_redirects', True) return request('get', url, params=params, **kwargs) (Source code sample from the Python requests library , Apache License, v2.0 ) Syntax highlighting support is available for and of the following languages listed on the highlightjs website . See the mkdocs \"styling your docs\" hljs_languages section for info on how to load languages dynamically. Note Include source code formatted in Github-flavored Markdown fenced code blocks with an info string that defines the supported programming language to automate syntax highlighting when your site is built. Tables \u00b6 Striped Table \u00b6 # Head 1 Head 2 Head 3 1 Box 1 Box 2 Box 3 2 Box 4 Box 5 Box 6 3 Box 7 Box 8 Box 9 Bordered Table \u00b6 # Head 1 Head 2 Head 3 1 Box 1 Box 2 Box 3 2 Box 4 Box 5 Box 6 3 Box 7 Box 8 Box 9 Buttons \u00b6 Default Buttons \u00b6 Link Button Styled Buttons \u00b6 Default Primary Success Info Warning Danger Button Sizes \u00b6 Large button Large button Default button Default button Small button Small button Extra small button Extra small button Block Level Buttons \u00b6 Block level button Block level button Alerts \u00b6 A simple primary alert\u2014check it out! A simple secondary alert\u2014check it out! A simple success alert\u2014check it out! A simple danger alert\u2014check it out! A simple warning alert\u2014check it out! A simple info alert\u2014check it out! A simple light alert\u2014check it out! A simple dark alert\u2014check it out! Callouts \u00b6 Default Callout This is a default callout. Primary Callout This is a primary callout. Success Callout This is a success callout. Info Callout This is an info callout. Warning Callout This is a warning callout. Danger Callout This is a danger callout. Admonitions \u00b6 The following admonitions are formatted like the callouts above but can be implemented in Markdown when you include the admonition Markdown extension in your mkdocs.yml file. Add the following setting to mkdocs.yml : markdown_extensions: - admonition and then follow the instructions in the extension documentation to author admonitions in your documentation. Cinder currently supports note , warning , and danger admonition types. Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. # this is a note def func(arg) { # notable things are in here! return None } Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. # this is a warning def func(arg) { # be careful! return None } Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. # this is dangerous def func(arg) { # BOOM! return None }","title":"Developer Guide"},{"location":"guides/en/developer_guide/#typography","text":"","title":"Typography"},{"location":"guides/en/developer_guide/#typefaces","text":"Headers: Inter Body: Open Sans Code: Hack","title":"Typefaces"},{"location":"guides/en/developer_guide/#body-copy","text":"You think water moves fast? You should see ice. It moves like it has a mind . Like it knows it killed the world once and got a taste for murder. After the avalanche, it took us a week to climb out . Now, I don't know exactly when we turned on each other, but I know that seven of us survived the slide... and only five made it out. Now we took an oath, that I'm breaking now. We said we'd say it was the snow that killed the other two, but it wasn't. Nature is lethal but it doesn't hold a candle to man. Like inline code? Here is a string for you 010101010 .","title":"Body Copy"},{"location":"guides/en/developer_guide/#lead-body-copy","text":"Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus.","title":"Lead Body Copy"},{"location":"guides/en/developer_guide/#headings","text":"All HTML headings, <h1> through <h6> , are available. .h1 through .h6 classes are also available, for when you want to match the font styling of a heading but still want your text to be displayed inline.","title":"Headings"},{"location":"guides/en/developer_guide/#blockquotes","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Someone famous in Source Title","title":"Blockquotes"},{"location":"guides/en/developer_guide/#lists","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Lists"},{"location":"guides/en/developer_guide/#horizontal-description-lists","text":"Something This is something SomethingElse This is something else","title":"Horizontal Description Lists"},{"location":"guides/en/developer_guide/#contextual-colors","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.","title":"Contextual Colors"},{"location":"guides/en/developer_guide/#code","text":"","title":"Code"},{"location":"guides/en/developer_guide/#inline-code","text":"This is an example of inline code #import requests","title":"Inline Code"},{"location":"guides/en/developer_guide/#tables","text":"","title":"Tables"},{"location":"guides/en/developer_guide/#striped-table","text":"# Head 1 Head 2 Head 3 1 Box 1 Box 2 Box 3 2 Box 4 Box 5 Box 6 3 Box 7 Box 8 Box 9","title":"Striped Table"},{"location":"guides/en/developer_guide/#bordered-table","text":"# Head 1 Head 2 Head 3 1 Box 1 Box 2 Box 3 2 Box 4 Box 5 Box 6 3 Box 7 Box 8 Box 9","title":"Bordered Table"},{"location":"guides/en/developer_guide/#buttons","text":"","title":"Buttons"},{"location":"guides/en/developer_guide/#default-buttons","text":"Link Button","title":"Default Buttons"},{"location":"guides/en/developer_guide/#styled-buttons","text":"Default Primary Success Info Warning Danger","title":"Styled Buttons"},{"location":"guides/en/developer_guide/#button-sizes","text":"Large button Large button Default button Default button Small button Small button Extra small button Extra small button","title":"Button Sizes"},{"location":"guides/en/developer_guide/#block-level-buttons","text":"Block level button Block level button","title":"Block Level Buttons"},{"location":"guides/en/developer_guide/#alerts","text":"A simple primary alert\u2014check it out! A simple secondary alert\u2014check it out! A simple success alert\u2014check it out! A simple danger alert\u2014check it out! A simple warning alert\u2014check it out! A simple info alert\u2014check it out! A simple light alert\u2014check it out! A simple dark alert\u2014check it out!","title":"Alerts"},{"location":"guides/en/developer_guide/#callouts","text":"","title":"Callouts"},{"location":"guides/en/developer_guide/#admonitions","text":"The following admonitions are formatted like the callouts above but can be implemented in Markdown when you include the admonition Markdown extension in your mkdocs.yml file. Add the following setting to mkdocs.yml : markdown_extensions: - admonition and then follow the instructions in the extension documentation to author admonitions in your documentation. Cinder currently supports note , warning , and danger admonition types. Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. # this is a note def func(arg) { # notable things are in here! return None } Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. # this is a warning def func(arg) { # be careful! return None } Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. # this is dangerous def func(arg) { # BOOM! return None }","title":"Admonitions"},{"location":"guides/en/quickstart/","text":"Install \u00b6 Linkay support serval ways for installing. Mac OS \u00b6 Linus \u00b6 Windows \u00b6 IOS \u00b6 Not Ready Android \u00b6 Not Ready Docker \u00b6","title":"Quickstart"},{"location":"guides/en/quickstart/#install","text":"Linkay support serval ways for installing.","title":"Install"},{"location":"guides/en/quickstart/#mac-os","text":"","title":"Mac OS"},{"location":"guides/en/quickstart/#linus","text":"","title":"Linus"},{"location":"guides/en/quickstart/#windows","text":"","title":"Windows"},{"location":"guides/en/quickstart/#ios","text":"Not Ready","title":"IOS"},{"location":"guides/en/quickstart/#android","text":"Not Ready","title":"Android"},{"location":"guides/en/quickstart/#docker","text":"","title":"Docker"},{"location":"guides/en/user_guide/","text":"Overview \u00b6 Features \u00b6 Zero config zero trust Encrypt GROUP","title":"User Guide"},{"location":"guides/en/user_guide/#overview","text":"","title":"Overview"},{"location":"guides/en/user_guide/#features","text":"Zero config zero trust Encrypt GROUP","title":"Features"}]}